---
- name: configuration
  hosts: all
  become: true

  tasks:
  - name: enable repos
    template:
      src: ./open_three-tier-app.repo
      dest: /etc/yum.repos.d/open_three-tier-app.repo
      mode: 0644

- name: deploy haproxy
  hosts: frontends
  become: true

  tasks:
  - name: install http and haproxy
    yum: 
      pkg={{ item }} 
      state=present
    with_items:
      - httpie
      - haproxy
 
  - name: enable http and HAProxy
    service:
      name={{ item }}
      state: started
    with_items:
      - httpie
      - haproxy
      
  - name: configure haproxy
    template:
      src: ./haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
      
  - name: restart HAproxy
    service:
      name: haproxy
      state: restarted

- name: deploy tomcat
  hosts: apps
  become: true

  tasks:
  - name: install tomcat
   yum: 
      pkg={{ item }} 
      state=present
    with_items:
      - tomcat
      - httpd
      
  - name: enable tomcat and httpd at boot 
    service:
      name={{ item }}
      enabled: yes
    with_items:
       - tomcat
       - httpd 

  - name: create ansible tomcat directory
    file:
      path: /usr/share/tomcat/webapps/ROOT
      state: directory

  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.j2
      dest: /usr/share/tomcat/webapps/ROOT/index.html
      mode: 0644

  - name: start tomcat and httpd
    service:
      name: {{ item }}
      state: started
    with_items:
      - tomcat
      - httpd

- name: index.html on app 1
  hosts: app1
  become: true

  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app1
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: index.html on app 2
  hosts: app2
  gather_facts: false
  become: true

  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app2
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: deploy postgres
  hosts: appdbs
  become: true
  
  tasks: 
  - name: install postgres
    yum:
      name: postgresql-server
      state: latest
      
  - name: enable apache at boot
    service:
      name: postgresql
      enabled: yes
      
  - name: tell user to finish setting up postgres
    debug:
      msg: "Either uncomment the postgres setup or manually login and initialize"

 # only run the next 2 tasks once!
  - name: initilize postgres
    command: postgresql-setup initdb
    
  - name: initilize postgres some more
    command: chkconfig postgresql on
    
  - name: start postgres
    service:
      name: postgresql.service
      state: started
